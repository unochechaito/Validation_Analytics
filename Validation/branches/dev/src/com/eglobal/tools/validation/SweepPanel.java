// Generated by delombok at Mon Feb 10 12:47:07 CST 2025
package com.eglobal.tools.validation;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.io.IOException;
import java.nio.file.Paths;
import java.util.List;

public class SweepPanel extends JPanel {
    @java.lang.SuppressWarnings("all")
    private static final org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(SweepPanel.class);
    private PhotoLoader photoLoader;
    private JTable consolidatedTable;
    private JScrollPane consolidatedScrollPane;
    private ComparisonWindow parentWindow;

    public SweepPanel(PhotoLoader photoLoader) {
        this.photoLoader = photoLoader;
        this.parentWindow = (ComparisonWindow) SwingUtilities.getWindowAncestor(this);
        setLayout(new GridBagLayout());
        JLabel sweepLabel = new JLabel("Barrido general");
        GridBagConstraints gbc_sweepLabel = new GridBagConstraints();
        gbc_sweepLabel.anchor = GridBagConstraints.EAST;
        gbc_sweepLabel.insets = new Insets(0, 10, 25, 360);
        gbc_sweepLabel.gridx = 0;
        gbc_sweepLabel.gridy = 0;
        add(sweepLabel, gbc_sweepLabel);
        JButton sweepButton = new JButton("Barrido");
        GridBagConstraints gbc_sweepButton = new GridBagConstraints();
        gbc_sweepButton.anchor = GridBagConstraints.EAST;
        gbc_sweepButton.insets = new Insets(0, 7, 25, 5);
        gbc_sweepButton.gridx = 1;
        gbc_sweepButton.gridy = 0;
        add(sweepButton, gbc_sweepButton);
        sweepButton.addActionListener(e -> performSweep());
    }

    private void performSweep() {
        this.parentWindow = (ComparisonWindow) SwingUtilities.getWindowAncestor(this);
        String[] columnNames = {"Consec", "Fotograf√≠a", "Registros Totales Base", "Registros Totales A Comparar", "Alertas (Base)"};
        DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0);
        String dirLeft = this.parentWindow.getLeftDirectorySelector().getCanonicalDirectoryPathSelected();
        String dirRight = this.parentWindow.getRightDirectorySelector().getCanonicalDirectoryPathSelected();
        if (dirLeft == null || dirLeft.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione el directorio Base.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (dirRight == null || dirRight.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione el directorio A comparar (Referencia).", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        try {
            BarridoGeneralCsv barrido = new BarridoGeneralCsv(Paths.get(dirLeft), Paths.get(dirRight));
            List<Object[]> list = barrido.compare();
            list.forEach(tableModel::addRow);
        } catch (IOException e) {
            log.error("Error al comparar directorios: \n{}\n{}", dirLeft, dirRight);
            log.error("", e);
            JOptionPane.showMessageDialog(this, "Error al comparar directorios, vea los logs del sistema para mas detalles.");
        }
        if (consolidatedTable == null) {
            consolidatedTable = new JTable(tableModel);
            configureTable(consolidatedTable);
            consolidatedTable.getColumnModel().getColumn(4).setCellRenderer(parentWindow.getAlertColumnRenderer());
            consolidatedScrollPane = new JScrollPane(consolidatedTable);
        } else {
            consolidatedTable.setModel(tableModel);
            configureTable(consolidatedTable);
            consolidatedTable.getColumnModel().getColumn(4).setCellRenderer(parentWindow.getAlertColumnRenderer());
        }
        this.parentWindow.repintarConsolidatedTable(consolidatedScrollPane);
    }

    private void configureTable(JTable table) {
        table.getColumnModel().getColumn(0).setPreferredWidth(60);
        table.getColumnModel().getColumn(0).setMinWidth(15);
        table.getColumnModel().getColumn(0).setMaxWidth(60);
        table.getColumnModel().getColumn(1).setPreferredWidth(425);
        table.getColumnModel().getColumn(1).setMinWidth(100);
        table.getColumnModel().getColumn(4).setPreferredWidth(165);
    }

    @java.lang.SuppressWarnings("all")
    public JScrollPane getConsolidatedScrollPane() {
        return this.consolidatedScrollPane;
    }
}
